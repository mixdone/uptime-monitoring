basePath: /
definitions:
  dto.AuthResult:
    properties:
      access_token:
        type: string
      refresh_token:
        type: string
    type: object
  dto.LoginRequest:
    properties:
      fingerprint:
        type: string
      password:
        type: string
      username:
        type: string
    required:
    - fingerprint
    - password
    - username
    type: object
  dto.LogoutRequest:
    properties:
      fingerprint:
        type: string
      refresh_token:
        type: string
    required:
    - fingerprint
    - refresh_token
    type: object
  dto.RefreshRequest:
    properties:
      fingerprint:
        type: string
      refresh_token:
        type: string
    required:
    - fingerprint
    - refresh_token
    type: object
  dto.RegisterRequest:
    properties:
      email:
        type: string
      fingerprint:
        type: string
      password:
        minLength: 6
        type: string
      telegram_id:
        type: integer
      username:
        maxLength: 30
        minLength: 3
        type: string
    required:
    - fingerprint
    - password
    - username
    type: object
host: localhost:8080
info:
  contact: {}
  description: API for uptime monitoring service
  title: Uptime Monitoring API
  version: "1.0"
paths:
  /auth/login:
    post:
      consumes:
      - application/json
      parameters:
      - description: user credentials
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/dto.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.AuthResult'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
      tags:
      - auth
  /auth/logout:
    post:
      consumes:
      - application/json
      parameters:
      - description: tokens
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/dto.LogoutRequest'
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - ApiKeyAuth: []
      summary: Logout user
      tags:
      - auth
  /auth/refresh:
    post:
      consumes:
      - application/json
      parameters:
      - description: tokens
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/dto.RefreshRequest'
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Refresh user
      tags:
      - auth
  /auth/register:
    post:
      consumes:
      - application/json
      parameters:
      - description: user credentials
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/dto.RegisterRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.AuthResult'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Register user
      tags:
      - auth
securityDefinitions:
  ApiKeyAuth:
    description: 'Введите токен в формате: Bearer <your-token>'
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
